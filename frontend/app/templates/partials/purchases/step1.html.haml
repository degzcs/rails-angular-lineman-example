%form.purchase-form{:name => "purchaseForm", "novalidate" => "novalidate"}
  %section{layout: "row"}
    %div.md-padding{flex: ""}
      // ---Purchase Type
      %fieldset.standard.tr-fieldset{:layout => "column"}
        %legend
          %h3
            1. Seleccione El Tipo de Compra
        %div.fieldset-inputs
          %div{layout: "row"}
            %md-input-container{flex: ""}
              %md-radio-group{"ng-model" => "purchase.model.type", :required => "", :name => 'purchase_type'}
                %md-radio-button{:value => "provider", :ng-click => 'flushData()'} Directamente desde proveedor
                %md-radio-button{:value => "trazoro", :ng-click => 'flushData()'} Trazoro
                

  %section{layout: "row"}
    // ---------------------- Provider info ------------------- ///
    %div.md-padding{flex: ""}
      %fieldset.standard.tr-fieldset{:layout => "column"}
        %legend
          %h3{:ng-if => "purchase.model.type == 'provider'"}
            2. Seleccione un Proovedor
          %h3{:ng-if => "purchase.model.type == 'trazoro'"}
            2. Ingrese el codigo de barras

        %md-autocomplete{:ng-if => "purchase.model.type == 'provider'", "md-selected-item"=>"purchase.model.provider", "md-search-text"=> "searchText", "md-items" => "provider in searchProvider(searchText)", "md-no-cache" => "true", "md-item-text"=>"provider.name", "placeholder" => "Buscar Proveedor por Cedula", "md-selected-item-change" => "selectedProviderChange(provider)","md-search-text-change"=>"getQuery(searchText)"}
          %span{"md-highlight-flags" => "^i", "md-highlight-text" => "searchText"} {{provider.first_name}} {{provider.last_name}} - c.c. {{provider.document_number}}
          %md-not-found
            No se encontraron proovedores
          

        %div.fieldset-inputs
          %div{layout: "row", :ng-if => "purchase.model.type == 'trazoro'"}
            %md-input-container{flex: ''}
              %label Numero de codigo de barras de la Venta
              %input{"ng-model" => "code", :name => 'provider_name'}
            %md-input-container{flex: 30}
              %a.md-button.md-raised.md-primary.find-provider-button{:ng-click =>"searchProviderByCode(code)"}  Buscar
          %div{layout: "row"}
            %md-input-container{flex: ""}
              %label Nombre Proovedor
              %input{"ng-model" => "purchase.model.provider.name", :required => "", :name => 'provider_name', :readOnly => 'true'}
            %md-input-container{flex: ""}
              %label Nombre de la Compania
              %input{"ng-model" => "purchase.model.provider.company_name", :required => "", :name => 'company_name', :readOnly => 'true'}
          %div{layout: "row"}
            / %md-input-container{flex: "20"}
            /   %label tipo doc.
            /   %input{"ng-model" => "purchase.model.provider.document_type", :required => "", :name => 'provider_document_type', :readOnly => 'true'}
            %md-input-container{flex: ""}
              %label Numero de Documento
              %input{"ng-model" => "purchase.model.provider.document_number", :required => "", :name => 'provider_document_number', :readOnly => 'true'}
          %div{layout: "row"}
            %md-input-container{flex: ""}
              %label Registro Rucom
              %input{"ng-model" => "purchase.model.provider[purchase.model.rucom_id_field]", :name => 'provider_rucom', :readOnly => 'true'}
            %md-input-container{flex: ""}
              %label Estado Rucom
              %input{"ng-model" => "purchase.model.provider.rucom_status", :name => 'provider_rucom_status', :readOnly => 'true'}

          %div.progress-fieldset{:layout => "row", "layout-align" => "space-around", "layout-sm" => "column","ng-if"=>"clientVerifiedProgress"}
            %md-progress-circular{"md-mode" => "indeterminate"}
      /%a.md-button.create-provider-button{:ng-if => "purchase.model.type == 'provider'", "ng-click"=>"createProvider()"}  crear proovedor
    %div{flex: ""}
      // ---------------------- Provider photo ------------------- //
      %fieldset.standard.tr-fieldset.photo-fieldset
        %legend
          %h3{:ng-if => "purchase.model.type == 'provider'"}
            3. Tome una foto al Provedor
          %h3{:ng-if => "purchase.model.type == 'trazoro'"}
            3. Tome una foto al Transportador

        %md-input-container.row
          .photo
            %a.image-container{'ng-href' => "#camera",'ng-click' => "scanner(1)"}
              %img.face.cam{'alt'=>'Foto Proveedor', 'ng-src' => "{{purchase.model.seller_picture || 'img/default-user.png' }}","ng-model" => "purchase.model.seller_picture",  "check-image" => '', required: ""}
              /%md-tooltip{'md-direction'=> 'right'}
              /  Tomar Foto

  %section.uploader-certificate-form{layout: "row"}
    %div.md-padding{flex: ""}
      // ---------------------- Origin certificate info ------------------- //
      %fieldset.standard.tr-fieldset.origin-certificate-fieldset
        %legend
          %h3
          %h3{:ng-if => "purchase.model.type == 'provider'"}
            4. Suba el certificado de origen e ingrese el numero
          %h3{:ng-if => "purchase.model.type == 'trazoro'"}
            4. Ingrese el numero
        %div{layout: "row"}
          %md-input-container{flex: '40'}
            %label Numero Certificado de Origen
            %input.origin-certificate-number{"ng-model" => "purchase.model.origin_certificate_sequence", :name => 'origin_certificate_sequence'}
            %div{"ng-messages" => "purchaseForm.origin_certificate_sequence.$error"}
              %div{"ng-message" => "required"} * Este campo es requerido.

        %section.uploader-certificate-tab{layout: "row"}
          %div{flex: '40'}
            %h4 Seleccione una forma de subir el certificado
            %md-select.uploader-selector{"ng-model" => "origin_certificate_upload_type", :placeholder => "Cargar Centificado de Origen ..."}
              .options{:ng-if => "purchase.model.type == 'provider'"}
                %md-option{:value => "by_upload"} Desde el PC
                %md-option{:value => "by_scan"} Por Escaner
                %md-option{:value => "by_photo"} por Camara
          %div{flex: ''}
            .upload-oc{:flex => ''}
              .button-action.md-padding{:ng-switch => '', :on => 'origin_certificate_upload_type', :ng-if => "purchase.model.type == 'provider'"}
                %md-input-container
                  %label Nombre del archivo
                  %input{"ng-model" => "purchase.model.origin_certificate_file[0].name",  :readOnly => 'true',:required => "", :name => 'origin_certificate_file'}
                  %div{"ng-messages" => "purchaseForm.origin_certificate_file.$error"}
                    %div{"ng-message" => "required"} * Debe cargar el certificado de origen 
                  / .preview
                  /   %img{:ngf-src=>"purchase.model.origin_certificate_file[0]"}

                .by_upload{:ng-switch-when =>'by_upload'}
                  %md-button.btn-save.md-button{'ng-file-select' => '', 'ng-model' => 'purchase.model.origin_certificate_file'}
                    Subir Archivo
                    %md-icon{"md-svg-icon"=>"file:file_upload"}
          

                .by_scan{:ng-switch-when =>'by_scan'}
                  %md-button.btn-save.md-button{'ng-href' => "#scanner1",'ng-click' => "scanner(2)"}
                    Usar Escaner
                    %md-icon{"md-svg-icon"=>"maps:local_print_shop"}
                    
                .by_photo{:ng-switch-when =>'by_photo'}
                  %md-button.btn-save.md-button{"aria-label" => "Certificado de origen", :md-ripple-size => "partial",:ng-href => "#scanner",'ng-click' => "scanner(2)"}
                    Escanear con Camara
                    %md-icon{"md-svg-icon" => "image:camera_alt"}
                    
              .button-action.md-padding{:ng-if => "purchase.model.type == 'trazoro'"}
                .trazoro-origin-certificate
                  %md-input-container
                    %p Certificado de Origen
                    {{formatOriginCertificate(purchase.model.origin_certificate_file.url)}}


  .wizard-buttons{:layout => 'row', , "class"=>"md-padding autocomplete",  "layout-align"=>"end end"}
    %md-button.btn-save.md-button{ :ng-if => "purchase.model.type == 'provider'","ng-disabled" => 'purchaseForm.$invalid', "ui-sref"=>"new_purchase.step2", "ng-click" => "saveState()"} Continuar
    %md-button.btn-save.md-button{ :ng-if => "purchase.model.type == 'trazoro'","ng-disabled" => 'purchaseForm.$invalid', "ui-sref"=>"new_purchase.step3", "ng-click" => "saveState()"} Continuar